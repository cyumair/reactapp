{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","Friends.js","Searchbox.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","_ref","id","instagram","name","react_default","a","createElement","className","alt","src","concat","CardList","Friends","map","user","i","src_Card","key","username","Searchbox","Searchfield","searchChange","type","onChange","placeholder","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Searchchange","event","setState","searchfield","target","value","state","_this2","filteredfriend","filter","friend","toLowerCase","includes","src_Searchbox","src_CardList","Component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e74912d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React  from 'react' ;\r\n\r\n\r\nconst Card = ( {id , instagram , name} ) => {\r\n    return (<div className='bg-dark-gray dib br3 pa3 ma2 grow bw2 shadow-5 items-center tc grow'>\r\n        <img className='size' alt='img of a bot' src={`https://robohash.org/${id}?250x300`} />\r\n        <div className='yellow'>\r\n            <h2>{name}</h2>\r\n            <p>{instagram}</p>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Card ; ","import React from 'react' ; \r\nimport Card from './Card';\r\nconst CardList = ({ Friends }) =>{\r\n    return(\r\n       \r\n                Friends.map(( user , i ) => {\r\n                    return(\r\n                       < Card \r\n                         key={ i }\r\n                         id={ Friends[i].id }\r\n                         name={ Friends[i].name }\r\n                         instagram={ Friends[i].instagram }\r\n                         />                     \r\n                    );\r\n                }\r\n                )\r\n        \r\n    );\r\n }\r\nexport default CardList;","export const Friends = [\r\n    \r\n    {\r\n        id: 1  ,\r\n        name: 'Sabeeh Waqas' ,\r\n        username: 'sabeeh' ,\r\n        instagram: 'sabeehwaqas' ,\r\n    },\r\n    {\r\n        id:2   ,\r\n        name: 'M Hammad' ,\r\n        username: 'hammad' ,\r\n        instagram: 'hamad727272' ,\r\n    },\r\n    {\r\n        id:3   ,\r\n        name: 'Zain Tariq' ,\r\n        username: 'Zain' ,\r\n        instagram: 'unknown' \r\n    },\r\n    {\r\n        id: 4  ,\r\n        name: 'Tariq M' ,\r\n        username: 'tariq' ,\r\n        instagram: 'tariq_khan1999' \r\n    },\r\n    {\r\n        id:5   ,\r\n        name: 'Saad Sarmad' ,\r\n        username: 'saad' ,\r\n        instagram: 'saadsarmad_18' \r\n    },\r\n    {\r\n        id: 6  ,\r\n        name: 'Ali Z' ,\r\n        username: 'alimalak' ,\r\n        instagram: 'ali_zarkash' \r\n    },\r\n    {\r\n        id:  7 ,\r\n        name: 'Tauseef W' ,\r\n        username: 'tauseef' ,\r\n        instagram: 'tauseef_wali' \r\n    },\r\n    {\r\n        id: 8  ,\r\n        name: 'Kamal Ahmed' ,\r\n        username: 'kami' ,\r\n        instagram: 'kamal_ahmed' \r\n    },\r\n    {\r\n        id: 9  ,\r\n        name: 'Umar Zaman' ,\r\n        username: 'umar' ,\r\n        instagram: 'umarzamanraza' \r\n    },\r\n    {\r\n        id: 10  ,\r\n        name: 'Usama Iqbal' ,\r\n        username: 'usama' ,\r\n        instagram: 'malikosama4173' \r\n    },\r\n    {\r\n        id:  11 ,\r\n        name: 'Hassam Sajid' ,\r\n        username: 'hassam' ,\r\n        instagram: 'hassamsajid41' \r\n    },\r\n    {\r\n        id: 12  ,\r\n        name: 'Ibtisaam ' ,\r\n        username: 'ibtisaam' ,\r\n        instagram: 'ibtsaamqadir' \r\n    }\r\n]\r\n","import React from 'react' ; \r\n\r\nconst Searchbox = ({Searchfield , searchChange}) => {\r\n    return(\r\n        <div className='p2'>\r\n            \r\n                <input className='p3 ba b--light-blue bg-light-green'\r\n                type='search'\r\n                \r\n                onChange = {searchChange}\r\n                placeholder='Search For A Friend' \r\n                /> \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Searchbox;","import React , {Component} from 'react' ;\r\nimport CardList from './CardList' ;\r\nimport { Friends } from './Friends' ;\r\nimport Searchbox from './Searchbox' ; \r\nclass App extends Component {\r\n        constructor(){\r\n                        super()\r\n                        this.state = {\r\n                        Friends: Friends ,\r\n                        searchfield : '' \r\n                                    }\r\n                    }\r\n        Searchchange = (event) => {\r\n                        this.setState({searchfield : event.target.value })\r\n                     }\r\n                     \r\n\r\n                    \r\n         render () {\r\n            const filteredfriend = this.state.Friends.filter(friend =>{\r\n                return (\r\n                    friend.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n                    );\r\n                })\r\n             return(\r\n                    <div>\r\n                        <div className='tc courier black '>\r\n                            <h1>My Friends List</h1>\r\n                            <Searchbox searchChange={this.Searchchange} />\r\n                        </div>\r\n                        <CardList Friends={filteredfriend}/>\r\n                        </div>\r\n                 );\r\n        }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App';\nReactDOM.render(\n               <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}